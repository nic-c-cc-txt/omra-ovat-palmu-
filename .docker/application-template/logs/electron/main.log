[2021-04-27 16:05:35.679] [info] server listening on \\.\pipe\dockerFrontendApiServer
[2021-04-27 16:05:35.689] [debug] register to backend \\.\pipe\dockerFrontendApiServer
[2021-04-27 16:05:35.690] [verbose] POST /notifications/subscriptions data = { address: '\\\\.\\pipe\\dockerFrontendApiServer' }
[2021-04-27 16:05:35.763] [info] application ready
[2021-04-27 16:05:35.788] [info] open with action : createAndLoadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:05:35.874] [info] main window options {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:05:35.875] [info] using production config /dashboard
[2021-04-27 16:05:35.895] [info] open with action : loadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","allow-file-access-from-files":true,"backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:05:35.912] [info] ping received
[2021-04-27 16:05:35.959] [info] Response success for /notifications/subscriptions
[2021-04-27 16:05:35.960] [info] Response for POST /notifications/subscriptions
[2021-04-27 16:05:35.975] [verbose] 
[2021-04-27 16:05:35.969] [info] application ready
[2021-04-27 16:05:36.033] [info] open with action : createAndLoadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:05:36.099] [info] main window options {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:05:36.101] [info] using production config /dashboard
[2021-04-27 16:05:38.384] [verbose] GET /features params = null
[2021-04-27 16:05:38.389] [verbose] GET /settings params = null
[2021-04-27 16:05:38.392] [verbose] GET /versions params = null
[2021-04-27 16:05:38.396] [info] Response success for /features
[2021-04-27 16:05:38.397] [info] Response for GET /features
[2021-04-27 16:05:38.399] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:05:38.402] [verbose] GET /system/editor params = null
[2021-04-27 16:05:38.415] [verbose] GET /kubernetes params = null
[2021-04-27 16:05:38.419] [verbose] GET /registry/user params = null
[2021-04-27 16:05:38.422] [verbose] GET /docker params = null
[2021-04-27 16:05:38.427] [verbose] GET /update params = null
[2021-04-27 16:05:38.439] [info] Response success for /settings
[2021-04-27 16:05:38.441] [info] Response for GET /settings
[2021-04-27 16:05:38.442] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: false,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": false,\r\n' +
      '  "experimental": false,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: false,
      showSystemContainers: false,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:05:38.458] [info] Response success for /registry/user
[2021-04-27 16:05:38.468] [info] Response for GET /registry/user
[2021-04-27 16:05:38.469] [verbose] { username: '' }
[2021-04-27 16:05:38.471] [info] Response success for /kubernetes
[2021-04-27 16:05:38.472] [info] Response for GET /kubernetes
[2021-04-27 16:05:38.474] [verbose] { state: 'stopped', enabled: false }
[2021-04-27 16:05:38.479] [info] Response success for /update
[2021-04-27 16:05:38.482] [info] Response for GET /update
[2021-04-27 16:05:38.485] [verbose] { updateAvailableTime: 0 }
[2021-04-27 16:05:38.491] [info] Response success for /docker
[2021-04-27 16:05:38.494] [info] Response for GET /docker
[2021-04-27 16:05:38.497] [verbose] { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:05:38.503] [info] Response success for /system/editor
[2021-04-27 16:05:38.505] [info] Response for GET /system/editor
[2021-04-27 16:05:38.507] [verbose] {
  id: 'vscode',
  name: 'Visual Studio Code',
  command: 'C:\\Users\\Neuro\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\\Code.cmd'
}
[2021-04-27 16:05:38.593] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 16:05:38.692] [info] Response success for /system/disk-usage
[2021-04-27 16:05:38.693] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 16:05:38.695] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 247328
}
[2021-04-27 16:05:38.711] [verbose] GET /features params = null
[2021-04-27 16:05:38.761] [info] Response success for /features
[2021-04-27 16:05:38.762] [info] Response for GET /features
[2021-04-27 16:05:38.764] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:05:39.379] [info] Response success for /versions
[2021-04-27 16:05:39.380] [info] Response for GET /versions
[2021-04-27 16:05:39.382] [verbose] {
  gitCommit: '6b70fc1f64d103396b0f5d514398e25cc0b1a003',
  appVersion: '3.3.1',
  buildNumber: '63152',
  channel: 'stable',
  defaultVersionPack: 'community',
  engineVersion: '20.10.5',
  composeVersion: '1.29.0',
  notaryVersion: '0.6.1',
  credentialHelpersVersion: '0.6.3',
  kubernetesVersion: 'v1.19.7',
  snykVersion: 'v1.461.0'
}
[2021-04-27 16:05:45.669] [verbose] GET /settings params = null
[2021-04-27 16:05:45.672] [verbose] GET /features params = null
[2021-04-27 16:05:45.675] [info] Response success for /features
[2021-04-27 16:05:45.676] [info] Response for GET /features
[2021-04-27 16:05:45.677] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:05:45.686] [info] Response success for /settings
[2021-04-27 16:05:45.686] [info] Response for GET /settings
[2021-04-27 16:05:45.688] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: false,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": false,\r\n' +
      '  "experimental": false,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: false,
      showSystemContainers: false,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:05:45.783] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 16:05:45.797] [info] Response success for /system/disk-usage
[2021-04-27 16:05:45.797] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 16:05:45.799] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 247328
}
[2021-04-27 16:05:52.962] [verbose] GET /settings/wsl2-distros params = null
[2021-04-27 16:05:53.045] [info] Response success for /settings/wsl2-distros
[2021-04-27 16:05:53.046] [info] Response for GET /settings/wsl2-distros
[2021-04-27 16:05:53.048] [verbose] []
[2021-04-27 16:05:54.823] [verbose] GET /settings/wsl2-distros params = null
[2021-04-27 16:05:54.888] [info] Response success for /settings/wsl2-distros
[2021-04-27 16:05:54.889] [info] Response for GET /settings/wsl2-distros
[2021-04-27 16:05:54.891] [verbose] []
[2021-04-27 16:13:14.038] [verbose] GET /settings params = null
[2021-04-27 16:13:14.052] [info] Response success for /settings
[2021-04-27 16:13:14.053] [info] Response for GET /settings
[2021-04-27 16:13:14.055] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: false,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": false,\r\n' +
      '  "experimental": false,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: false,
      showSystemContainers: false,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:13:15.821] [verbose] POST /settings data = {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{"registry-mirrors":[],"insecure-registries":[],"debug":true,"experimental":true,"features":{"buildkit":true}}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true },
  experimentalFeatures: {
    ApplicationDesigner: {
      name: 'Application Designer',
      label: 'Enable Application Designer',
      enabled: false,
      type: 1
    },
    DevEnvironmentsV0: {
      name: 'Painted Door Dev Environments',
      label: 'Enable Painted Door Dev Environments',
      description: 'Display Painted Door Dev Environments in the dashboard',
      enabled: true,
      type: 1
    },
    ProUser: {
      name: 'ProUser',
      label: 'free',
      description: 'You can upgrade your current plan [here](URL)',
      enabled: false,
      type: 3
    },
    Tip: {
      name: 'Tip of the Week',
      label: 'Enable Tip of the Week',
      description: 'Enable Tip of the Week',
      enabled: true,
      type: 1
    },
    UpdateNotificationBox: {
      name: 'Update Notification Box',
      label: 'Update Notification Box',
      description: 'Enable update notification box in the UI',
      enabled: false,
      type: 1
    },
    UpdateRedesign: {
      name: 'Update Redesign',
      label: 'Enable Update Redesign',
      description: 'Enable Update Redesign',
      enabled: true,
      type: 1
    },
    VolumesPanel: {
      name: 'Volumes panel',
      label: 'Enable Volumes panel',
      description: 'Display the container volumes in the dashboard',
      enabled: false,
      type: 1
    },
    grpcfuseV2: {
      name: 'Grpcfuse',
      label: 'Use grpcfuse for filesharing by default',
      description: 'Switch off to use the legacy osxfs file sharing instead.',
      enabled: true,
      type: 1
    },
    mutagenV0: {
      name: 'Mutagen',
      label: 'Two-way file synchronisation',
      description: 'Use Mutagen to synchronize files in a container with your local disk.',
      enabled: false,
      type: 1
    }
  },
  cli: { useGrpcfuse: false }
}
[2021-04-27 16:13:15.914] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 16:13:15.917] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 16:13:15.918] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 16:13:15.992] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:15.993] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:16.069] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:17.890] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:17.891] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:17.897] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:13:18.080] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:18.083] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:18.102] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:19.828] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:19.830] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:19.835] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:13:19.958] [info] Response success for /settings
[2021-04-27 16:13:19.959] [info] Response for POST /settings
[2021-04-27 16:13:19.972] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:13:20.007] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 16:13:20.026] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 16:13:20.036] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 16:13:20.067] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:20.088] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:20.095] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:20.204] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 16:13:20.227] [info] Response success for /system/disk-usage
[2021-04-27 16:13:20.231] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 16:13:20.234] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 247305
}
[2021-04-27 16:13:20.274] [verbose] GET /features params = null
[2021-04-27 16:13:20.278] [info] Response success for /features
[2021-04-27 16:13:20.282] [info] Response for GET /features
[2021-04-27 16:13:20.285] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:13:21.736] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:21.737] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:21.740] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:13:22.696] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:22.697] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:22.706] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:23.671] [debug] kubernetes state notification, req.body:  { state: 'starting', enabled: true }
[2021-04-27 16:13:23.672] [info] kubernetes state notification { state: 'starting', enabled: true }
[2021-04-27 16:13:23.675] [info] notification : {"type":"kubernetes.success","payload":{"state":"starting","enabled":true}}
[2021-04-27 16:13:24.471] [debug] kubernetes state notification, req.body:  { state: 'failed to start', enabled: true }
[2021-04-27 16:13:24.472] [info] kubernetes state notification { state: 'failed to start', enabled: true }
[2021-04-27 16:13:24.474] [info] notification : {"type":"kubernetes.success","payload":{"state":"failed to start","enabled":true}}
[2021-04-27 16:13:24.512] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:24.514] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:24.517] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:13:34.550] [verbose] POST /desktop/cleanup data = { hyperv: true, wsl2: true, windowsContainers: false }
[2021-04-27 16:13:34.590] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 16:13:34.591] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 16:13:34.595] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 16:13:34.853] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 16:13:34.854] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 16:13:34.857] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 16:13:34.872] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 16:13:34.873] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 16:13:34.877] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 16:13:35.085] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 16:13:35.086] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 16:13:35.090] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 16:13:35.162] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:35.228] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:35.236] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:36.697] [info] Response success for /desktop/cleanup
[2021-04-27 16:13:36.698] [info] Response for POST /desktop/cleanup
[2021-04-27 16:13:36.703] [verbose] 
[2021-04-27 16:13:36.707] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:36.709] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:36.713] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:13:38.033] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:38.035] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:38.038] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:39.493] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:39.494] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:39.498] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:13:43.880] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:43.881] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:13:43.887] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:13:45.414] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:45.415] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:13:45.419] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:14:03.236] [verbose] GET /settings params = null
[2021-04-27 16:14:03.239] [verbose] GET /features params = null
[2021-04-27 16:14:03.254] [info] Response success for /features
[2021-04-27 16:14:03.256] [info] Response for GET /features
[2021-04-27 16:14:03.258] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:14:03.265] [info] Response success for /settings
[2021-04-27 16:14:03.269] [info] Response for GET /settings
[2021-04-27 16:14:03.273] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:14:03.421] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 16:14:03.483] [info] Response success for /system/disk-usage
[2021-04-27 16:14:03.491] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 16:14:03.493] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 247311
}
[2021-04-27 16:14:13.989] [verbose] GET /settings params = null
[2021-04-27 16:14:14.003] [info] Response success for /settings
[2021-04-27 16:14:14.003] [info] Response for GET /settings
[2021-04-27 16:14:14.005] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: false
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:14:14.012] [verbose] POST /settings data = {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{"registry-mirrors":[],"insecure-registries":[],"debug":true,"experimental":true,"features":{"buildkit":true}}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true },
  experimentalFeatures: {
    ApplicationDesigner: {
      name: 'Application Designer',
      label: 'Enable Application Designer',
      enabled: false,
      type: 1
    },
    DevEnvironmentsV0: {
      name: 'Painted Door Dev Environments',
      label: 'Enable Painted Door Dev Environments',
      description: 'Display Painted Door Dev Environments in the dashboard',
      enabled: true,
      type: 1
    },
    ProUser: {
      name: 'ProUser',
      label: 'free',
      description: 'You can upgrade your current plan [here](URL)',
      enabled: false,
      type: 3
    },
    Tip: {
      name: 'Tip of the Week',
      label: 'Enable Tip of the Week',
      description: 'Enable Tip of the Week',
      enabled: true,
      type: 1
    },
    UpdateNotificationBox: {
      name: 'Update Notification Box',
      label: 'Update Notification Box',
      description: 'Enable update notification box in the UI',
      enabled: false,
      type: 1
    },
    UpdateRedesign: {
      name: 'Update Redesign',
      label: 'Enable Update Redesign',
      description: 'Enable Update Redesign',
      enabled: true,
      type: 1
    },
    VolumesPanel: {
      name: 'Volumes panel',
      label: 'Enable Volumes panel',
      description: 'Display the container volumes in the dashboard',
      enabled: false,
      type: 1
    },
    grpcfuseV2: {
      name: 'Grpcfuse',
      label: 'Use grpcfuse for filesharing by default',
      description: 'Switch off to use the legacy osxfs file sharing instead.',
      enabled: true,
      type: 1
    },
    mutagenV0: {
      name: 'Mutagen',
      label: 'Two-way file synchronisation',
      description: 'Use Mutagen to synchronize files in a container with your local disk.',
      enabled: false,
      type: 1
    }
  },
  cli: { useGrpcfuse: false }
}
[2021-04-27 16:14:14.026] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 16:14:14.027] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 16:14:14.030] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 16:14:14.050] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:14:14.050] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:14:14.053] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:14:14.057] [info] Response success for /settings
[2021-04-27 16:14:14.058] [info] Response for POST /settings
[2021-04-27 16:14:14.060] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 16:14:14.267] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 16:14:14.281] [info] Response success for /system/disk-usage
[2021-04-27 16:14:14.281] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 16:14:14.284] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 247318
}
[2021-04-27 16:14:14.311] [verbose] GET /features params = null
[2021-04-27 16:14:14.314] [info] Response success for /features
[2021-04-27 16:14:14.315] [info] Response for GET /features
[2021-04-27 16:14:14.317] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:14:17.525] [verbose] POST /kubernetes/reset data = null
[2021-04-27 16:14:17.544] [info] Response success for /kubernetes/reset
[2021-04-27 16:14:17.545] [info] Response for POST /kubernetes/reset
[2021-04-27 16:14:17.550] [verbose] 
[2021-04-27 16:14:17.555] [debug] kubernetes state notification, req.body:  { state: 'stopping', enabled: true }
[2021-04-27 16:14:17.558] [info] kubernetes state notification { state: 'stopping', enabled: true }
[2021-04-27 16:14:17.561] [info] notification : {"type":"kubernetes.success","payload":{"state":"stopping","enabled":true}}
[2021-04-27 16:14:17.577] [debug] kubernetes state notification, req.body:  { state: 'failed to start', enabled: true }
[2021-04-27 16:14:17.578] [info] kubernetes state notification { state: 'failed to start', enabled: true }
[2021-04-27 16:14:17.581] [info] notification : {"type":"kubernetes.success","payload":{"state":"failed to start","enabled":true}}
[2021-04-27 16:14:17.597] [debug] kubernetes state notification, req.body:  { state: 'failed to start', enabled: true }
[2021-04-27 16:14:17.598] [info] kubernetes state notification { state: 'failed to start', enabled: true }
[2021-04-27 16:14:17.601] [info] notification : {"type":"kubernetes.success","payload":{"state":"failed to start","enabled":true}}
[2021-04-27 16:48:20.167] [info] open with action : loadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"tutorial","allow-file-access-from-files":true,"backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:48:20.225] [info] application ready
[2021-04-27 16:48:20.269] [info] open with action : createAndLoadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"tutorial","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:48:20.339] [info] main window options {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"tutorial","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 16:48:20.343] [info] using production config /tutorial
[2021-04-27 16:48:44.402] [verbose] POST /registry/login data = { username: '', password: '' }
[2021-04-27 16:48:44.434] [info] Response success for /registry/login
[2021-04-27 16:48:44.436] [info] Response for POST /registry/login
[2021-04-27 16:48:44.439] [verbose] 
[2021-04-27 16:49:27.924] [debug] login state notification, req.body:  { username: 'neuromancer0001', logged: true }
[2021-04-27 16:49:27.926] [info] login state notification { username: 'neuromancer0001', logged: true }
[2021-04-27 16:49:27.930] [info] notification : {"type":"login.success","payload":{"username":"neuromancer0001","logged":true}}
[2021-04-27 16:49:27.958] [verbose] GET /features params = null
[2021-04-27 16:49:28.825] [info] Response success for /features
[2021-04-27 16:49:28.827] [info] Response for GET /features
[2021-04-27 16:49:28.833] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 16:49:36.529] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: false,
    time: 0,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Start'
  }
}
[2021-04-27 16:49:36.532] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: false,
    time: 4098.785000000149,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Clone'
  }
}
[2021-04-27 16:49:36.535] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: false,
    time: 2635.214999999851,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Build'
  }
}
[2021-04-27 16:49:36.541] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: false,
    time: 2243.2299999999814,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Run'
  }
}
[2021-04-27 16:49:36.544] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: true,
    time: 3632.5099999997765,
    action: true,
    skip: false,
    terminal: false,
    signIn: true,
    done: true,
    name: 'Share'
  }
}
[2021-04-27 16:49:36.567] [info] Response success for /analytics/track
[2021-04-27 16:49:36.570] [info] Response for POST /analytics/track
[2021-04-27 16:49:36.572] [verbose] 
[2021-04-27 16:49:36.577] [info] Response success for /analytics/track
[2021-04-27 16:49:36.578] [info] Response for POST /analytics/track
[2021-04-27 16:49:36.580] [verbose] 
[2021-04-27 16:49:36.582] [info] Response success for /analytics/track
[2021-04-27 16:49:36.584] [info] Response for POST /analytics/track
[2021-04-27 16:49:36.586] [verbose] 
[2021-04-27 16:49:36.589] [info] Response success for /analytics/track
[2021-04-27 16:49:36.591] [info] Response for POST /analytics/track
[2021-04-27 16:49:36.593] [verbose] 
[2021-04-27 16:49:36.596] [info] Response success for /analytics/track
[2021-04-27 16:49:36.597] [info] Response for POST /analytics/track
[2021-04-27 16:49:36.599] [verbose] 
[2021-04-27 16:49:47.756] [debug] engine state notification, req.body:  { state: 'starting', mode: 'windows' }
[2021-04-27 16:49:47.758] [info] engine state notification { state: 'starting', mode: 'windows' }
[2021-04-27 16:49:47.761] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"windows"}}
[2021-04-27 16:49:48.981] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'windows' }
[2021-04-27 16:49:48.982] [info] engine state notification { state: 'failed to start', mode: 'windows' }
[2021-04-27 16:49:48.984] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"windows"}}
[2021-04-27 16:49:49.093] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 16:49:49.094] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 16:49:49.107] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 16:49:50.493] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 16:49:50.494] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 16:49:50.497] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 16:49:50.648] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 16:49:50.650] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 16:49:50.654] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 16:49:50.825] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 16:49:50.826] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 16:49:50.828] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 16:49:50.861] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:49:50.862] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 16:49:50.865] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 16:49:50.881] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 16:49:50.885] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 16:49:50.892] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 17:01:22.344] [info] server listening on \\.\pipe\dockerFrontendApiServer
[2021-04-27 17:01:22.350] [debug] register to backend \\.\pipe\dockerFrontendApiServer
[2021-04-27 17:01:22.352] [verbose] POST /notifications/subscriptions data = { address: '\\\\.\\pipe\\dockerFrontendApiServer' }
[2021-04-27 17:01:22.431] [info] application ready
[2021-04-27 17:01:22.461] [info] open with action : createAndLoadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 17:01:22.545] [info] main window options {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"containers","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 17:01:22.601] [info] using production config /dashboard
[2021-04-27 17:01:22.645] [info] ping received
[2021-04-27 17:01:22.861] [info] Response success for /notifications/subscriptions
[2021-04-27 17:01:22.876] [info] Response for POST /notifications/subscriptions
[2021-04-27 17:01:22.880] [verbose] 
[2021-04-27 17:01:25.497] [verbose] GET /features params = null
[2021-04-27 17:01:25.504] [verbose] GET /settings params = null
[2021-04-27 17:01:25.514] [verbose] GET /versions params = null
[2021-04-27 17:01:25.547] [info] Response success for /features
[2021-04-27 17:01:25.549] [info] Response for GET /features
[2021-04-27 17:01:25.553] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 17:01:25.562] [verbose] GET /system/editor params = null
[2021-04-27 17:01:25.572] [info] Response success for /settings
[2021-04-27 17:01:25.577] [info] Response for GET /settings
[2021-04-27 17:01:25.583] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:01:25.598] [verbose] GET /kubernetes params = null
[2021-04-27 17:01:25.612] [verbose] GET /registry/user params = null
[2021-04-27 17:01:25.620] [verbose] GET /docker params = null
[2021-04-27 17:01:25.633] [verbose] GET /update params = null
[2021-04-27 17:01:25.653] [info] Response success for /system/editor
[2021-04-27 17:01:25.691] [info] Response for GET /system/editor
[2021-04-27 17:01:25.694] [verbose] {
  id: 'vscode',
  name: 'Visual Studio Code',
  command: 'C:\\Users\\Neuro\\AppData\\Local\\Programs\\Microsoft VS Code\\bin\\Code.cmd'
}
[2021-04-27 17:01:25.702] [info] Response success for /docker
[2021-04-27 17:01:25.704] [info] Response for GET /docker
[2021-04-27 17:01:25.709] [verbose] { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:01:25.714] [info] Response success for /kubernetes
[2021-04-27 17:01:25.717] [info] Response for GET /kubernetes
[2021-04-27 17:01:25.720] [verbose] { state: 'stopped', enabled: true }
[2021-04-27 17:01:25.725] [info] Response success for /registry/user
[2021-04-27 17:01:25.729] [info] Response for GET /registry/user
[2021-04-27 17:01:25.731] [verbose] { username: 'neuromancer0001' }
[2021-04-27 17:01:25.735] [info] Response success for /update
[2021-04-27 17:01:25.738] [info] Response for GET /update
[2021-04-27 17:01:25.742] [verbose] { updateAvailableTime: 0 }
[2021-04-27 17:01:25.899] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 17:01:25.993] [info] Response success for /system/disk-usage
[2021-04-27 17:01:25.994] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 17:01:25.997] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 246961
}
[2021-04-27 17:01:26.079] [verbose] GET /features params = null
[2021-04-27 17:01:26.082] [info] Response success for /features
[2021-04-27 17:01:26.084] [info] Response for GET /features
[2021-04-27 17:01:26.087] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 17:01:28.205] [info] Response success for /versions
[2021-04-27 17:01:28.206] [info] Response for GET /versions
[2021-04-27 17:01:28.208] [verbose] {
  gitCommit: '6b70fc1f64d103396b0f5d514398e25cc0b1a003',
  appVersion: '3.3.1',
  buildNumber: '63152',
  channel: 'stable',
  defaultVersionPack: 'community',
  engineVersion: '20.10.5',
  composeVersion: '1.29.0',
  notaryVersion: '0.6.1',
  credentialHelpersVersion: '0.6.3',
  kubernetesVersion: 'v1.19.7',
  snykVersion: 'v1.461.0'
}
[2021-04-27 17:04:35.598] [verbose] POST /desktop/cleanup data = { hyperv: true, wsl2: true, windowsContainers: true }
[2021-04-27 17:04:35.679] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 17:04:35.683] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 17:04:35.691] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 17:04:35.767] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 17:04:35.771] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 17:04:35.790] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 17:04:35.827] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 17:04:35.843] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 17:04:35.846] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 17:04:36.024] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 17:04:36.025] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 17:04:36.035] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 17:04:36.057] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 17:04:36.070] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 17:04:36.075] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 17:04:36.362] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 17:04:36.364] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 17:04:36.368] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 17:04:36.421] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 17:04:36.581] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 17:04:36.606] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 17:04:38.234] [info] Response success for /desktop/cleanup
[2021-04-27 17:04:38.235] [info] Response for POST /desktop/cleanup
[2021-04-27 17:04:38.238] [verbose] 
[2021-04-27 17:04:38.243] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:04:38.246] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:04:38.249] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 17:04:40.631] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 17:04:40.632] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 17:04:40.637] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 17:04:42.233] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:04:42.234] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:04:42.237] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 17:04:46.707] [verbose] GET /settings params = null
[2021-04-27 17:04:46.709] [verbose] GET /features params = null
[2021-04-27 17:04:46.713] [info] Response success for /features
[2021-04-27 17:04:46.715] [info] Response for GET /features
[2021-04-27 17:04:46.717] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 17:04:46.725] [info] Response success for /settings
[2021-04-27 17:04:46.726] [info] Response for GET /settings
[2021-04-27 17:04:46.729] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:04:46.835] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 17:04:46.851] [info] Response success for /system/disk-usage
[2021-04-27 17:04:46.852] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 17:04:46.854] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 246945
}
[2021-04-27 17:05:00.267] [verbose] POST /kubernetes/reset data = null
[2021-04-27 17:05:00.307] [info] Response success for /kubernetes/reset
[2021-04-27 17:05:00.308] [info] Response for POST /kubernetes/reset
[2021-04-27 17:05:00.313] [verbose] 
[2021-04-27 17:05:06.923] [debug] kubernetes state notification, req.body:  { state: 'failed to start', enabled: true }
[2021-04-27 17:05:06.924] [info] kubernetes state notification { state: 'failed to start', enabled: true }
[2021-04-27 17:05:06.927] [info] notification : {"type":"kubernetes.success","payload":{"state":"failed to start","enabled":true}}
[2021-04-27 17:05:13.044] [verbose] GET /settings/wsl2-distros params = null
[2021-04-27 17:05:13.126] [info] Response success for /settings/wsl2-distros
[2021-04-27 17:05:13.127] [info] Response for GET /settings/wsl2-distros
[2021-04-27 17:05:13.129] [verbose] []
[2021-04-27 17:05:14.299] [verbose] GET /settings/wsl2-distros params = null
[2021-04-27 17:05:14.367] [info] Response success for /settings/wsl2-distros
[2021-04-27 17:05:14.367] [info] Response for GET /settings/wsl2-distros
[2021-04-27 17:05:14.370] [verbose] []
[2021-04-27 17:05:15.786] [verbose] GET /settings params = null
[2021-04-27 17:05:15.801] [info] Response success for /settings
[2021-04-27 17:05:15.802] [info] Response for GET /settings
[2021-04-27 17:05:15.804] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: true,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:05:15.811] [verbose] POST /settings data = {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{"registry-mirrors":[],"insecure-registries":[],"debug":true,"experimental":true,"features":{"buildkit":true}}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: false,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'manual', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true },
  experimentalFeatures: {
    ApplicationDesigner: {
      name: 'Application Designer',
      label: 'Enable Application Designer',
      enabled: false,
      type: 1
    },
    DevEnvironmentsV0: {
      name: 'Painted Door Dev Environments',
      label: 'Enable Painted Door Dev Environments',
      description: 'Display Painted Door Dev Environments in the dashboard',
      enabled: true,
      type: 1
    },
    ProUser: {
      name: 'ProUser',
      label: 'free',
      description: 'You can upgrade your current plan [here](URL)',
      enabled: false,
      type: 3
    },
    Tip: {
      name: 'Tip of the Week',
      label: 'Enable Tip of the Week',
      description: 'Enable Tip of the Week',
      enabled: true,
      type: 1
    },
    UpdateNotificationBox: {
      name: 'Update Notification Box',
      label: 'Update Notification Box',
      description: 'Enable update notification box in the UI',
      enabled: false,
      type: 1
    },
    UpdateRedesign: {
      name: 'Update Redesign',
      label: 'Enable Update Redesign',
      description: 'Enable Update Redesign',
      enabled: true,
      type: 1
    },
    VolumesPanel: {
      name: 'Volumes panel',
      label: 'Enable Volumes panel',
      description: 'Display the container volumes in the dashboard',
      enabled: false,
      type: 1
    },
    grpcfuseV2: {
      name: 'Grpcfuse',
      label: 'Use grpcfuse for filesharing by default',
      description: 'Switch off to use the legacy osxfs file sharing instead.',
      enabled: true,
      type: 1
    },
    mutagenV0: {
      name: 'Mutagen',
      label: 'Two-way file synchronisation',
      description: 'Use Mutagen to synchronize files in a container with your local disk.',
      enabled: false,
      type: 1
    }
  },
  cli: { useGrpcfuse: false }
}
[2021-04-27 17:05:15.870] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 17:05:15.871] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 17:05:15.874] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 17:05:15.986] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 17:05:15.987] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 17:05:15.993] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 17:05:16.053] [info] Response success for /settings
[2021-04-27 17:05:16.057] [info] Response for POST /settings
[2021-04-27 17:05:16.061] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: false,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'manual', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:05:16.146] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 17:05:16.157] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 17:05:16.169] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 17:05:16.298] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 17:05:16.312] [info] Response success for /system/disk-usage
[2021-04-27 17:05:16.313] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 17:05:16.316] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 246944
}
[2021-04-27 17:05:16.366] [verbose] GET /features params = null
[2021-04-27 17:05:16.369] [info] Response success for /features
[2021-04-27 17:05:16.370] [info] Response for GET /features
[2021-04-27 17:05:16.373] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 17:05:17.800] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:05:17.802] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:05:17.806] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 17:05:19.367] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 17:05:19.368] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 17:05:19.373] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 17:05:21.221] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:05:21.222] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:05:21.227] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 17:14:19.583] [info] open with action : loadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"tutorial","allow-file-access-from-files":true,"backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 17:14:19.652] [info] application ready
[2021-04-27 17:14:19.688] [info] open with action : createAndLoadView, opts: {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"tutorial","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 17:14:19.752] [info] main window options {"_":["C:\\Program Files\\Docker\\Docker\\frontend\\Docker Desktop.exe"],"name":"tutorial","backend":"\\\\.\\pipe\\dockerWebApiServer","dockerBackend":"\\\\.\\pipe\\dockerBackendApiServer","frontend":"\\\\.\\pipe\\dockerFrontendApiServer","volumeContentsBackend":"\\\\.\\pipe\\volumeContents"}
[2021-04-27 17:14:19.753] [info] using production config /tutorial
[2021-04-27 17:14:39.047] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: false,
    time: 0,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Start'
  }
}
[2021-04-27 17:14:39.050] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: true,
    time: 2849.6099999992875,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Clone'
  }
}
[2021-04-27 17:14:39.053] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: true,
    time: 2386.45999999973,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Build'
  }
}
[2021-04-27 17:14:39.056] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: true,
    time: 2995.2050000000745,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Run'
  }
}
[2021-04-27 17:14:39.060] [verbose] POST /analytics/track data = {
  event: 'actionFinishTutorial',
  body: {
    signedIn: true,
    time: 2872.2550000002375,
    action: true,
    skip: false,
    terminal: false,
    signIn: false,
    done: true,
    name: 'Share'
  }
}
[2021-04-27 17:14:39.084] [info] Response success for /analytics/track
[2021-04-27 17:14:39.085] [info] Response for POST /analytics/track
[2021-04-27 17:14:39.088] [verbose] 
[2021-04-27 17:14:39.091] [info] Response success for /analytics/track
[2021-04-27 17:14:39.093] [info] Response for POST /analytics/track
[2021-04-27 17:14:39.096] [verbose] 
[2021-04-27 17:14:39.100] [info] Response success for /analytics/track
[2021-04-27 17:14:39.101] [info] Response for POST /analytics/track
[2021-04-27 17:14:39.103] [verbose] 
[2021-04-27 17:14:39.106] [info] Response success for /analytics/track
[2021-04-27 17:14:39.108] [info] Response for POST /analytics/track
[2021-04-27 17:14:39.110] [verbose] 
[2021-04-27 17:14:39.113] [info] Response success for /analytics/track
[2021-04-27 17:14:39.114] [info] Response for POST /analytics/track
[2021-04-27 17:14:39.116] [verbose] 
[2021-04-27 17:25:04.707] [verbose] POST /analytics/track data = { event: 'actionDevEnvironmentsGetStarted' }
[2021-04-27 17:25:04.724] [info] Response success for /analytics/track
[2021-04-27 17:25:04.725] [info] Response for POST /analytics/track
[2021-04-27 17:25:04.727] [verbose] 
[2021-04-27 17:32:53.966] [verbose] GET /settings params = null
[2021-04-27 17:32:53.969] [verbose] GET /features params = null
[2021-04-27 17:32:53.974] [info] Response success for /features
[2021-04-27 17:32:53.978] [info] Response for GET /features
[2021-04-27 17:32:53.981] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 17:32:53.989] [info] Response success for /settings
[2021-04-27 17:32:53.992] [info] Response for GET /settings
[2021-04-27 17:32:53.995] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: false,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'manual', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:32:54.113] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 17:32:54.126] [info] Response success for /system/disk-usage
[2021-04-27 17:32:54.127] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 17:32:54.129] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 246920
}
[2021-04-27 17:33:07.265] [verbose] GET /settings params = null
[2021-04-27 17:33:07.279] [info] Response success for /settings
[2021-04-27 17:33:07.279] [info] Response for GET /settings
[2021-04-27 17:33:07.282] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: false,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'manual', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:33:07.289] [verbose] POST /settings data = {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{"registry-mirrors":[],"insecure-registries":[],"debug":true,"experimental":true,"features":{"buildkit":true}}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: false,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true },
  experimentalFeatures: {
    ApplicationDesigner: {
      name: 'Application Designer',
      label: 'Enable Application Designer',
      enabled: false,
      type: 1
    },
    DevEnvironmentsV0: {
      name: 'Painted Door Dev Environments',
      label: 'Enable Painted Door Dev Environments',
      description: 'Display Painted Door Dev Environments in the dashboard',
      enabled: true,
      type: 1
    },
    ProUser: {
      name: 'ProUser',
      label: 'free',
      description: 'You can upgrade your current plan [here](URL)',
      enabled: false,
      type: 3
    },
    Tip: {
      name: 'Tip of the Week',
      label: 'Enable Tip of the Week',
      description: 'Enable Tip of the Week',
      enabled: true,
      type: 1
    },
    UpdateNotificationBox: {
      name: 'Update Notification Box',
      label: 'Update Notification Box',
      description: 'Enable update notification box in the UI',
      enabled: false,
      type: 1
    },
    UpdateRedesign: {
      name: 'Update Redesign',
      label: 'Enable Update Redesign',
      description: 'Enable Update Redesign',
      enabled: true,
      type: 1
    },
    VolumesPanel: {
      name: 'Volumes panel',
      label: 'Enable Volumes panel',
      description: 'Display the container volumes in the dashboard',
      enabled: false,
      type: 1
    },
    grpcfuseV2: {
      name: 'Grpcfuse',
      label: 'Use grpcfuse for filesharing by default',
      description: 'Switch off to use the legacy osxfs file sharing instead.',
      enabled: true,
      type: 1
    },
    mutagenV0: {
      name: 'Mutagen',
      label: 'Two-way file synchronisation',
      description: 'Use Mutagen to synchronize files in a container with your local disk.',
      enabled: false,
      type: 1
    }
  },
  cli: { useGrpcfuse: false }
}
[2021-04-27 17:33:07.305] [debug] engine state notification, req.body:  { state: 'updating', mode: 'linux' }
[2021-04-27 17:33:07.306] [info] engine state notification { state: 'updating', mode: 'linux' }
[2021-04-27 17:33:07.309] [info] notification : {"type":"engine.success","payload":{"state":"updating","mode":"linux"}}
[2021-04-27 17:33:07.339] [debug] engine state notification, req.body:  { state: 'stopped', mode: 'linux' }
[2021-04-27 17:33:07.340] [info] engine state notification { state: 'stopped', mode: 'linux' }
[2021-04-27 17:33:07.349] [info] notification : {"type":"engine.success","payload":{"state":"stopped","mode":"linux"}}
[2021-04-27 17:33:07.355] [info] Response success for /settings
[2021-04-27 17:33:07.366] [info] Response for POST /settings
[2021-04-27 17:33:07.370] [verbose] {
  desktop: {
    disableUpdate: false,
    analyticsEnabled: true,
    autoStart: true,
    backupData: false,
    disableTips: false,
    tipLastViewedTime: 0,
    tipLastId: 0,
    updateAvailableTime: 0,
    updatePopupAppearanceTime: 0,
    exportInsecureDaemon: true,
    useCredentialHelper: true,
    wslEngineEnabled: true,
    wslPreconditionMessage: null,
    openUIOnStartupDisabled: false,
    displayedTutorial: false
  },
  vm: {
    daemon: '{\r\n' +
      '  "registry-mirrors": [],\r\n' +
      '  "insecure-registries": [],\r\n' +
      '  "debug": true,\r\n' +
      '  "experimental": true,\r\n' +
      '  "features": {\r\n' +
      '    "buildkit": true\r\n' +
      '  }\r\n' +
      '}',
    fileSharing: [],
    kubernetes: {
      enabled: true,
      showSystemContainers: true,
      stackOrchestrator: true
    },
    network: {
      automaticDNS: false,
      dns: '8.8.8.8',
      socksProxyPort: 0,
      vpnkitCIDR: '192.168.65.0/28'
    },
    proxy: { mode: 'system', http: '', https: '', exclude: '' },
    resources: {
      cpus: { value: 2, min: 1, max: 4 },
      memoryMiB: { value: 2048, min: 1024, max: 5888 },
      swapMiB: { value: 1024, min: 512, max: 4096 },
      diskSizeMiB: { value: 65536, used: 0 },
      dataFolder: 'C:\\ProgramData\\DockerDesktop\\vm-data'
    }
  },
  wslIntegration: { distros: [], enableIntegrationWithDefaultWslDistro: true }
}
[2021-04-27 17:33:07.627] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 17:33:07.630] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 17:33:07.634] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 17:33:07.757] [verbose] GET /system/disk-usage params = { path: 'C:\\ProgramData\\DockerDesktop\\vm-data' }
[2021-04-27 17:33:07.773] [info] Response success for /system/disk-usage
[2021-04-27 17:33:07.775] [info] Response for GET /system/disk-usage?path=C:%5CProgramData%5CDockerDesktop%5Cvm-data
[2021-04-27 17:33:07.779] [verbose] {
  path: 'C:\\ProgramData\\DockerDesktop\\vm-data',
  usedMiB: 0,
  freeMiB: 246924
}
[2021-04-27 17:33:07.817] [verbose] GET /features params = null
[2021-04-27 17:33:07.823] [info] Response success for /features
[2021-04-27 17:33:07.832] [info] Response for GET /features
[2021-04-27 17:33:07.845] [verbose] {
  ApplicationDesigner: {
    name: 'Application Designer',
    label: 'Enable Application Designer',
    enabled: false,
    type: 1
  },
  DevEnvironmentsV0: {
    name: 'Painted Door Dev Environments',
    label: 'Enable Painted Door Dev Environments',
    description: 'Display Painted Door Dev Environments in the dashboard',
    enabled: true,
    type: 1
  },
  ProUser: {
    name: 'ProUser',
    label: 'free',
    description: 'You can upgrade your current plan [here](URL)',
    enabled: false,
    type: 3
  },
  Tip: {
    name: 'Tip of the Week',
    label: 'Enable Tip of the Week',
    description: 'Enable Tip of the Week',
    enabled: true,
    type: 1
  },
  UpdateNotificationBox: {
    name: 'Update Notification Box',
    label: 'Update Notification Box',
    description: 'Enable update notification box in the UI',
    enabled: false,
    type: 1
  },
  UpdateRedesign: {
    name: 'Update Redesign',
    label: 'Enable Update Redesign',
    description: 'Enable Update Redesign',
    enabled: true,
    type: 1
  },
  VolumesPanel: {
    name: 'Volumes panel',
    label: 'Enable Volumes panel',
    description: 'Display the container volumes in the dashboard',
    enabled: false,
    type: 1
  },
  grpcfuseV2: {
    name: 'Grpcfuse',
    label: 'Use grpcfuse for filesharing by default',
    description: 'Switch off to use the legacy osxfs file sharing instead.',
    enabled: true,
    type: 1
  },
  mutagenV0: {
    name: 'Mutagen',
    label: 'Two-way file synchronisation',
    description: 'Use Mutagen to synchronize files in a container with your local disk.',
    enabled: false,
    type: 1
  }
}
[2021-04-27 17:33:09.561] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:33:09.562] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:33:09.568] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 17:33:21.982] [debug] engine state notification, req.body:  { state: 'starting', mode: 'linux' }
[2021-04-27 17:33:21.983] [info] engine state notification { state: 'starting', mode: 'linux' }
[2021-04-27 17:33:21.987] [info] notification : {"type":"engine.success","payload":{"state":"starting","mode":"linux"}}
[2021-04-27 17:33:23.858] [debug] engine state notification, req.body:  { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:33:23.859] [info] engine state notification { state: 'failed to start', mode: 'linux' }
[2021-04-27 17:33:23.863] [info] notification : {"type":"engine.success","payload":{"state":"failed to start","mode":"linux"}}
[2021-04-27 17:37:28.837] [verbose] POST /diagnostics/gather data = null
[2021-04-27 17:37:28.844] [info] Response success for /diagnostics/gather
[2021-04-27 17:37:28.845] [info] Response for POST /diagnostics/gather
[2021-04-27 17:37:28.848] [verbose] {
  id: '5F6D035B-6A45-4D55-B1A0-36391A1FC0DF/20210427153728',
  path: 'C:\\Users\\Neuro\\AppData\\Local\\Temp\\5F6D035B-6A45-4D55-B1A0-36391A1FC0DF\\20210427153728.zip',
  status: ''
}
[2021-04-27 17:37:33.841] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:37:33.848] [info] Response success for /diagnostics/status
[2021-04-27 17:37:33.850] [info] Response for GET /diagnostics/status
[2021-04-27 17:37:33.854] [verbose] { status: 'running' }
[2021-04-27 17:37:38.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:37:38.853] [info] Response success for /diagnostics/status
[2021-04-27 17:37:38.856] [info] Response for GET /diagnostics/status
[2021-04-27 17:37:38.859] [verbose] { status: 'running' }
[2021-04-27 17:37:43.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:37:43.856] [info] Response success for /diagnostics/status
[2021-04-27 17:37:43.858] [info] Response for GET /diagnostics/status
[2021-04-27 17:37:43.862] [verbose] { status: 'running' }
[2021-04-27 17:37:48.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:37:48.855] [info] Response success for /diagnostics/status
[2021-04-27 17:37:48.857] [info] Response for GET /diagnostics/status
[2021-04-27 17:37:48.861] [verbose] { status: 'running' }
[2021-04-27 17:37:53.857] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:37:53.863] [info] Response success for /diagnostics/status
[2021-04-27 17:37:53.868] [info] Response for GET /diagnostics/status
[2021-04-27 17:37:53.872] [verbose] { status: 'running' }
[2021-04-27 17:37:58.845] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:37:58.848] [info] Response success for /diagnostics/status
[2021-04-27 17:37:58.850] [info] Response for GET /diagnostics/status
[2021-04-27 17:37:58.852] [verbose] { status: 'running' }
[2021-04-27 17:38:03.847] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:03.850] [info] Response success for /diagnostics/status
[2021-04-27 17:38:03.853] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:03.855] [verbose] { status: 'running' }
[2021-04-27 17:38:08.840] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:08.843] [info] Response success for /diagnostics/status
[2021-04-27 17:38:08.845] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:08.847] [verbose] { status: 'running' }
[2021-04-27 17:38:13.840] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:13.843] [info] Response success for /diagnostics/status
[2021-04-27 17:38:13.844] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:13.847] [verbose] { status: 'running' }
[2021-04-27 17:38:18.845] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:18.848] [info] Response success for /diagnostics/status
[2021-04-27 17:38:18.850] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:18.853] [verbose] { status: 'running' }
[2021-04-27 17:38:23.846] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:23.849] [info] Response success for /diagnostics/status
[2021-04-27 17:38:23.851] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:23.853] [verbose] { status: 'running' }
[2021-04-27 17:38:28.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:28.853] [info] Response success for /diagnostics/status
[2021-04-27 17:38:28.855] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:28.858] [verbose] { status: 'running' }
[2021-04-27 17:38:33.839] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:33.842] [info] Response success for /diagnostics/status
[2021-04-27 17:38:33.843] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:33.846] [verbose] { status: 'running' }
[2021-04-27 17:38:38.839] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:38.843] [info] Response success for /diagnostics/status
[2021-04-27 17:38:38.844] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:38.847] [verbose] { status: 'running' }
[2021-04-27 17:38:43.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:43.855] [info] Response success for /diagnostics/status
[2021-04-27 17:38:43.857] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:43.861] [verbose] { status: 'running' }
[2021-04-27 17:38:48.854] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:48.858] [info] Response success for /diagnostics/status
[2021-04-27 17:38:48.860] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:48.864] [verbose] { status: 'running' }
[2021-04-27 17:38:53.846] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:53.849] [info] Response success for /diagnostics/status
[2021-04-27 17:38:53.850] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:53.852] [verbose] { status: 'running' }
[2021-04-27 17:38:58.854] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:38:58.859] [info] Response success for /diagnostics/status
[2021-04-27 17:38:58.863] [info] Response for GET /diagnostics/status
[2021-04-27 17:38:58.866] [verbose] { status: 'running' }
[2021-04-27 17:39:03.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:03.855] [info] Response success for /diagnostics/status
[2021-04-27 17:39:03.857] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:03.862] [verbose] { status: 'running' }
[2021-04-27 17:39:08.848] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:08.853] [info] Response success for /diagnostics/status
[2021-04-27 17:39:08.855] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:08.859] [verbose] { status: 'running' }
[2021-04-27 17:39:13.845] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:13.847] [info] Response success for /diagnostics/status
[2021-04-27 17:39:14.263] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:14.267] [verbose] { status: 'running' }
[2021-04-27 17:39:18.842] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:18.848] [info] Response success for /diagnostics/status
[2021-04-27 17:39:18.852] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:18.858] [verbose] { status: 'running' }
[2021-04-27 17:39:23.844] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:23.849] [info] Response success for /diagnostics/status
[2021-04-27 17:39:23.853] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:23.857] [verbose] { status: 'running' }
[2021-04-27 17:39:28.852] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:28.855] [info] Response success for /diagnostics/status
[2021-04-27 17:39:28.856] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:28.858] [verbose] { status: 'running' }
[2021-04-27 17:39:33.844] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:33.850] [info] Response success for /diagnostics/status
[2021-04-27 17:39:33.852] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:33.857] [verbose] { status: 'running' }
[2021-04-27 17:39:38.846] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:38.851] [info] Response success for /diagnostics/status
[2021-04-27 17:39:38.853] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:38.857] [verbose] { status: 'running' }
[2021-04-27 17:39:43.850] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:43.855] [info] Response success for /diagnostics/status
[2021-04-27 17:39:43.857] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:43.861] [verbose] { status: 'running' }
[2021-04-27 17:39:48.843] [verbose] GET /diagnostics/status params = null
[2021-04-27 17:39:48.848] [info] Response success for /diagnostics/status
[2021-04-27 17:39:48.850] [info] Response for GET /diagnostics/status
[2021-04-27 17:39:48.854] [verbose] { status: 'running' }
